<?php
/* Generated by neoan3-cli */

namespace Neoan3\Model;


use Neoan3\Apps\Db;
use Neoan3\Apps\DbException;
use Neoan3\Apps\Ops;

class UserModel extends IndexModel {
    static function byId($id) {
        try{
            $user = Db::easy('user.*', ['id' => '$' . $id]);
        } catch (DbException $e){
            return [];
        }

        if(!empty($user)){
            $user = $user[0];
            $tables = ['email'=>false, 'profile'=>false, 'role'=>true];
            foreach ($tables as $table => $multiple) {
                $q = Db::easy('user_' . $table . '.*', ['^delete_date', 'user_id' => '$' . $id]);
                if($multiple){
                    $user[$table.'s'] = $q;
                } else{
                    $user[$table] = isset($q[0]) ? $q[0] : $q;
                }

            }
        }
        return $user;
    }

    static function find($condition = []) {
        if (!isset($condition['user.delete_date'])) {
            $condition['user.delete_date'] = '';
        }
        try{
            $ids = Db::easy('user.id user_email.email', $condition);
        } catch (DbException $e){
            $ids = [];
        }
        $users = [];
        foreach ($ids as $id) {
            $users[] = self::byId($id['id']);
        }
        return $users;
    }
    static function register($email,$password){
        $id = '$'.Db::uuid()->uuid;
        Db::ask('user',['id'=>$id]);
        Db::ask('user_email',['user_id'=>$id,'email'=>$email,'confirm_code'=>Ops::hash(28)]);
        Db::ask('user_password',['id'=>$id,'password'=>Ops::encrypt($password,$password)]);
        return self::byId($id);
    }

}
